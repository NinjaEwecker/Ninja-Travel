{"remainingRequest":"/Users/ninjameyer/Desktop/HamburgerCodingSchool/Vue-Travelblog/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/ninjameyer/Desktop/HamburgerCodingSchool/Vue-Travelblog/node_modules/@fawmi/vue-google-maps/src/components/marker.vue?vue&type=template&id=21eae1a6","dependencies":[{"path":"/Users/ninjameyer/Desktop/HamburgerCodingSchool/Vue-Travelblog/node_modules/@fawmi/vue-google-maps/src/components/marker.vue","mtime":499162500000},{"path":"/Users/ninjameyer/Desktop/HamburgerCodingSchool/Vue-Travelblog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ninjameyer/Desktop/HamburgerCodingSchool/Vue-Travelblog/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/ninjameyer/Desktop/HamburgerCodingSchool/Vue-Travelblog/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/ninjameyer/Desktop/HamburgerCodingSchool/Vue-Travelblog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ninjameyer/Desktop/HamburgerCodingSchool/Vue-Travelblog/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBAY2xpY2s9IigpPT4ge2NvbnNvbGUubG9nKCdzZGZzZCcpfSI+CiAgICA8c2xvdD48L3Nsb3Q+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["/Users/ninjameyer/Desktop/HamburgerCodingSchool/Vue-Travelblog/node_modules/@fawmi/vue-google-maps/src/components/marker.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/ninjameyer/Desktop/HamburgerCodingSchool/Vue-Travelblog/node_modules/@fawmi/vue-google-maps/src/components/marker.vue","sourceRoot":"","sourcesContent":["<template>\n  <div @click=\"()=> {console.log('sdfsd')}\">\n    <slot></slot>\n  </div>\n</template>\n<script>\n\nimport buildComponent from './build-component.js'\n\nconst props = {\n  animation: {\n    twoWay: true,\n    type: Number,\n  },\n  attribution: {\n    type: Object,\n  },\n  clickable: {\n    type: Boolean,\n    twoWay: true,\n    default: true,\n  },\n  cursor: {\n    type: String,\n    twoWay: true,\n  },\n  draggable: {\n    type: Boolean,\n    twoWay: true,\n    default: false,\n  },\n  icon: {\n    twoWay: true,\n  },\n  label: {},\n  opacity: {\n    type: Number,\n    default: 1,\n  },\n  options: {\n    type: Object,\n  },\n  place: {\n    type: Object,\n  },\n  position: {\n    type: Object,\n    twoWay: true,\n  },\n  shape: {\n    type: Object,\n    twoWay: true,\n  },\n  title: {\n    type: String,\n    twoWay: true,\n  },\n  zIndex: {\n    type: Number,\n    twoWay: true,\n  },\n  visible: {\n    twoWay: true,\n    default: true,\n  },\n}\n\nconst events = [\n  'click',\n  'rightclick',\n  'dblclick',\n  'drag',\n  'dragstart',\n  'dragend',\n  'mouseup',\n  'mousedown',\n  'mouseover',\n  'mouseout',\n]\n\nexport default buildComponent({\n  mappedProps: props,\n  events,\n  name: 'marker',\n  ctr: () => google.maps.Marker,\n\n  inject: {\n    $clusterPromise: {\n      default: null,\n    },\n  },\n  emits: events,\n  unmounted() {\n    if (!this.$markerObject) {\n      return\n    }\n\n    if (this.$clusterObject) {\n      // Repaint will be performed in `updated()` of cluster\n      this.$clusterObject.removeMarker(this.$markerObject, true)\n    } else {\n      this.$markerObject.setMap(null)\n    }\n  },\n\n  beforeCreate(options) {\n    if (this.$clusterPromise) {\n      options.map = null\n    }\n\n    return this.$clusterPromise\n  },\n\n  afterCreate(inst) {\n    if (this.$clusterPromise) {\n      this.$clusterPromise.then((co) => {\n        co.addMarker(inst)\n        inst.addListener('click', ()=> {\n          this.$emit('click')\n        });\n        this.$clusterObject = co\n      })\n    }\n  },\n})\n</script>\n"]}]}